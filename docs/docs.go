// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.example.com/support",
            "email": "support@example.com"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/v1/auth/google/callback": {
            "post": {
                "description": "Process Google OAuth callback and create user session",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Handle Google OAuth callback",
                "parameters": [
                    {
                        "description": "Google callback data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.GoogleCallbackRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.GoogleCallbackResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.APIError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.APIError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.APIError"
                        }
                    }
                }
            }
        },
        "/api/v1/auth/google/link": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Link a Google account to the currently authenticated user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Link Google account to existing user",
                "parameters": [
                    {
                        "description": "Google ID token",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.GoogleLinkRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.GoogleLinkResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.APIError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.APIError"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/models.APIError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.APIError"
                        }
                    }
                }
            }
        },
        "/api/v1/auth/google/login": {
            "get": {
                "description": "Generate Google OAuth authorization URL",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Initiate Google OAuth login",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Redirect URI after Google auth",
                        "name": "redirect_uri",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.GoogleLoginResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.APIError"
                        }
                    }
                }
            }
        },
        "/api/v1/auth/login": {
            "post": {
                "description": "Authenticate user with email and password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "User login with password",
                "parameters": [
                    {
                        "description": "Login credentials",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.LoginResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.APIError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.APIError"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/models.APIError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.APIError"
                        }
                    }
                }
            }
        },
        "/api/v1/auth/logout": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Logout user and invalidate tokens",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "User logout",
                "parameters": [
                    {
                        "description": "Logout request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.LogoutRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.LogoutResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.APIError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.APIError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.APIError"
                        }
                    }
                }
            }
        },
        "/api/v1/auth/refresh": {
            "post": {
                "description": "Exchange refresh token for new access token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Refresh access token",
                "parameters": [
                    {
                        "description": "Refresh token",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.RefreshTokenRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.RefreshTokenResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.APIError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.APIError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.APIError"
                        }
                    }
                }
            }
        },
        "/api/v1/auth/sessions": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve all active sessions for the authenticated user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Get user's active sessions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.SessionListResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.APIError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.APIError"
                        }
                    }
                }
            }
        },
        "/api/v1/auth/sessions/{session_id}": {
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Revoke a specific session by session ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Revoke a specific session",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Session ID",
                        "name": "session_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.RevokeSessionResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.APIError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.APIError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/models.APIError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.APIError"
                        }
                    }
                }
            }
        },
        "/api/v1/auth/verify": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Verify if the provided access token is valid",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Verify access token",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.VerifyTokenResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.APIError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.APIError"
                        }
                    }
                }
            }
        },
        "/api/v1/block/add": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new block with guests and media attachments",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "blocks"
                ],
                "summary": "Add new block to event",
                "parameters": [
                    {
                        "description": "Block creation data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AddBlockRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.AddBlockResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/block/delete": {
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Remove a block and optionally reorder remaining blocks",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "blocks"
                ],
                "summary": "Delete block from event",
                "parameters": [
                    {
                        "description": "Block deletion data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.DeleteBlockRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.DeleteBlockResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/block/info/{block_id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get detailed information about a specific block including guests and media",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "blocks"
                ],
                "summary": "Get block details",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Block ID",
                        "name": "block_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.GetBlockInfoResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/block/reorder": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Change the order of blocks within a specific event",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "blocks"
                ],
                "summary": "Reorder blocks within an event",
                "parameters": [
                    {
                        "description": "Block reordering data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ReorderBlocksRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ReorderBlocksResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/block/update": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update existing block with new information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "blocks"
                ],
                "summary": "Update block information",
                "parameters": [
                    {
                        "description": "Block update data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UpdateBlockRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.UpdateBlockResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/event/delete": {
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Cancel a specific event while preserving show template",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "events"
                ],
                "summary": "Cancel/delete event",
                "parameters": [
                    {
                        "description": "Event deletion data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.DeleteEventRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.DeleteEventResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/event/info/{event_id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get detailed information about a specific event including show details",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "events"
                ],
                "summary": "Get event details",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Event ID",
                        "name": "event_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.GetEventInfoResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/event/list": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get paginated list of events with filtering and sorting options",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "events"
                ],
                "summary": "List events with filtering",
                "parameters": [
                    {
                        "description": "Event list filters",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.EventListRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.EventListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/event/monthList": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get events organized by weeks and days for a specific month",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "events"
                ],
                "summary": "Get month view of events",
                "parameters": [
                    {
                        "description": "Month view request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.MonthListRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.MonthListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/event/update": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update specific event with custom fields while preserving show inheritance",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "events"
                ],
                "summary": "Update event details",
                "parameters": [
                    {
                        "description": "Event update data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UpdateEventRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.UpdateEventResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/event/weekList": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get events organized by days for a specific week",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "events"
                ],
                "summary": "Get week view of events",
                "parameters": [
                    {
                        "description": "Week view request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.WeekListRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.WeekListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/event/{event_id}/blocks": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get ordered list of blocks for a specific event",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "blocks"
                ],
                "summary": "List all blocks for an event",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Event ID",
                        "name": "event_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.EventBlocksResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/guest/autocomplete": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get guest suggestions for autocomplete functionality",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "guests"
                ],
                "summary": "Guest autocomplete search",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search query (minimum 2 characters)",
                        "name": "q",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Maximum results (default: 10, max: 50)",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.AutocompleteResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/guest/delete": {
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete a guest from the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "guests"
                ],
                "summary": "Delete guest",
                "parameters": [
                    {
                        "description": "Guest deletion data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.DeleteGuestRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.DeleteGuestResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/guest/info/{guest_id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get detailed information about a specific guest",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "guests"
                ],
                "summary": "Get guest details",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Guest ID",
                        "name": "guest_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.GetGuestInfoResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/guest/list": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get paginated list of guests with filtering and sorting options",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "guests"
                ],
                "summary": "List guests with filtering",
                "parameters": [
                    {
                        "description": "Guest list filters",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ListGuestsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ListGuestsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/guest/new": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new guest with contact information and notes",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "guests"
                ],
                "summary": "Create new guest",
                "parameters": [
                    {
                        "description": "Guest creation data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateGuestRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.CreateGuestResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/guest/update": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update existing guest with new information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "guests"
                ],
                "summary": "Update guest information",
                "parameters": [
                    {
                        "description": "Guest update data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UpdateGuestRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.UpdateGuestResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/media/get": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update media file metadata including filename and custom metadata",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "media"
                ],
                "summary": "Update media metadata",
                "parameters": [
                    {
                        "description": "Media update request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UpdateMediaRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.UpdateMediaResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Download specific media file from a post as binary stream. Supports range requests for video files to enable streaming and seeking.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "tags": [
                    "media"
                ],
                "summary": "Download specific media file",
                "parameters": [
                    {
                        "description": "Media download request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.GetLinkMediaRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Range header for partial content (e.g., bytes=0-1023)",
                        "name": "Range",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Full file download",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "206": {
                        "description": "Partial content (range request)",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "416": {
                        "description": "Range Not Satisfiable",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete media file from database and S3 storage",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "media"
                ],
                "summary": "Delete media file",
                "parameters": [
                    {
                        "description": "Media delete request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.DeleteMediaRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.DeleteMediaResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/media/getDirect": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get direct S3 link for specific media with configurable expiration",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "media"
                ],
                "summary": "Get S3 pre-signed URL for media",
                "parameters": [
                    {
                        "description": "Media URI request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.GetLinkMediaURIRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.GetLinkMediaURIResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/media/grab": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Add a new Telegram post link or YouTube video URL to download media. Automatically detects the platform and processes accordingly.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "media"
                ],
                "summary": "Add a new Telegram or YouTube link for processing",
                "parameters": [
                    {
                        "description": "Post link (Telegram or YouTube)",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AddPostRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.AddPostResponse"
                        }
                    },
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/models.AddPostResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/media/links": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get list of all media files from a specific Telegram post or YouTube video",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "media"
                ],
                "summary": "Get media files from a specific post",
                "parameters": [
                    {
                        "description": "Content ID for post",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.GetLinkListRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.MediaListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/media/list": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve list of all previously processed Telegram and YouTube links",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "media"
                ],
                "summary": "Get list of processed posts",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 20,
                        "description": "Items per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "created_at_desc",
                            "created_at_asc"
                        ],
                        "type": "string",
                        "description": "Sort order",
                        "name": "sort",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.PostListResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/roles/add": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new role with specified permissions",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "roles"
                ],
                "summary": "Create new role",
                "parameters": [
                    {
                        "description": "Role creation data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateRoleRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.CreateRoleResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/roles/delete": {
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete a role if it has no associated users",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "roles"
                ],
                "summary": "Delete role",
                "parameters": [
                    {
                        "description": "Role deletion data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.DeleteRoleRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.DeleteRoleResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/roles/info/{role_id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get detailed information about a specific role including user count",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "roles"
                ],
                "summary": "Get role information",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Role ID",
                        "name": "role_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.GetRoleInfoResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/roles/list": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get paginated list of roles with filters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "roles"
                ],
                "summary": "List roles",
                "parameters": [
                    {
                        "description": "List filters and options",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ListRolesRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ListRolesResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/roles/update": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update existing role details and permissions",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "roles"
                ],
                "summary": "Update role information",
                "parameters": [
                    {
                        "description": "Role update data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UpdateRoleRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.UpdateRoleResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/show/create": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new show with YouTube and Zoom integration for recurring streams",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "shows"
                ],
                "summary": "Create a new show",
                "parameters": [
                    {
                        "description": "Show details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateShowRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.CreateShowResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/show/delete": {
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Soft delete a show by setting its status to cancelled",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "shows"
                ],
                "summary": "Delete a show",
                "parameters": [
                    {
                        "description": "Show ID to delete",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.DeleteShowRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.DeleteShowResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/show/info/{show_id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get detailed information about a specific show including upcoming events",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "shows"
                ],
                "summary": "Get show information",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Show ID",
                        "name": "show_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.GetShowInfoResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/show/list": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get a paginated list of shows with filtering and sorting options",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "shows"
                ],
                "summary": "List shows",
                "parameters": [
                    {
                        "description": "List options",
                        "name": "request",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/models.ListShowsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ListShowsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/users": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get paginated list of users with query parameters",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "List users (RESTful)",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 20,
                        "description": "Items per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by status",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search by name or email",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort field",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort order (asc/desc)",
                        "name": "order",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ListUsersResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new user with simplified request format",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Create new user (RESTful)",
                "parameters": [
                    {
                        "description": "User creation data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.CreateUserResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/users/add": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new user with password or OIDC authentication",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Create new user",
                "parameters": [
                    {
                        "description": "User creation data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.CreateUserResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/users/delete": {
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Soft delete a user by setting status to inactive",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Delete user",
                "parameters": [
                    {
                        "description": "User deletion data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.DeleteUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.DeleteUserResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/users/info/{user_id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get detailed information about a specific user including roles",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get user information",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.GetUserInfoResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/users/list": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get paginated list of users with filters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "List users",
                "parameters": [
                    {
                        "description": "List filters and options",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ListUsersRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ListUsersResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/users/update": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update existing user details and roles",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Update user information",
                "parameters": [
                    {
                        "description": "User update data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UpdateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.UpdateUserResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/users/{user_id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get detailed information about a specific user without roles",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get user information (RESTful)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.GetUserInfoResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update existing user details with simplified request format",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Update user information (RESTful)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "User update data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UpdateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.UpdateUserResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Soft or hard delete a user based on force parameter",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Delete user (RESTful)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "User deletion data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.DeleteUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.DeleteUserResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/users/{user_id}/roles/{role_id}": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Add a specific role to a user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Add role to user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Role ID",
                        "name": "role_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.AddRoleToUserResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Remove a specific role from a user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Remove role from user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Role ID",
                        "name": "role_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.RemoveRoleFromUserResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/health": {
            "get": {
                "description": "Check the health of the service and its dependencies",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "health"
                ],
                "summary": "Health check endpoint",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.HealthResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/handlers.HealthResponse"
                        }
                    }
                }
            }
        },
        "/live": {
            "get": {
                "description": "Check if the service is alive",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "health"
                ],
                "summary": "Liveness check endpoint",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/ready": {
            "get": {
                "description": "Check if the service is ready to accept requests",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "health"
                ],
                "summary": "Readiness check endpoint",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "handlers.HealthResponse": {
            "type": "object",
            "properties": {
                "migrations": {
                    "$ref": "#/definitions/handlers.MigrationStatus"
                },
                "services": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/handlers.ServiceHealth"
                    }
                },
                "status": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "handlers.MigrationInfo": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "version": {
                    "type": "integer"
                }
            }
        },
        "handlers.MigrationStatus": {
            "type": "object",
            "properties": {
                "applied": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/handlers.MigrationInfo"
                    }
                },
                "count": {
                    "type": "integer"
                }
            }
        },
        "handlers.ServiceHealth": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "response_time": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "models.APIError": {
            "type": "object",
            "properties": {
                "details": {
                    "type": "string"
                },
                "error": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "models.AddBlockRequest": {
            "type": "object",
            "required": [
                "estimated_length",
                "event_id",
                "title"
            ],
            "properties": {
                "block_type": {
                    "$ref": "#/definitions/models.BlockType"
                },
                "description": {
                    "type": "string"
                },
                "estimated_length": {
                    "type": "integer",
                    "maximum": 480,
                    "minimum": 1
                },
                "event_id": {
                    "type": "string"
                },
                "guest_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "media": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.BlockMediaInput"
                    }
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": true
                },
                "order_index": {
                    "type": "integer"
                },
                "title": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "topic": {
                    "type": "string"
                }
            }
        },
        "models.AddBlockResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/models.BlockDetail"
                },
                "error": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "models.AddPostRequest": {
            "type": "object",
            "required": [
                "link"
            ],
            "properties": {
                "link": {
                    "type": "string"
                }
            }
        },
        "models.AddPostResponse": {
            "type": "object",
            "properties": {
                "content_id": {
                    "type": "string"
                },
                "media_count": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                },
                "processing_status": {
                    "$ref": "#/definitions/models.PostStatus"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "models.AddRoleToUserResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "models.AutocompleteData": {
            "type": "object",
            "properties": {
                "query": {
                    "type": "string"
                },
                "suggestions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.GuestSuggestion"
                    }
                },
                "total_matches": {
                    "type": "integer"
                }
            }
        },
        "models.AutocompleteResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/models.AutocompleteData"
                },
                "error": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "models.BlockDetail": {
            "type": "object",
            "properties": {
                "actual_length": {
                    "type": "integer"
                },
                "block_type": {
                    "$ref": "#/definitions/models.BlockType"
                },
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "estimated_length": {
                    "description": "in minutes",
                    "type": "integer"
                },
                "event_id": {
                    "type": "string"
                },
                "guests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.BlockGuestDetail"
                    }
                },
                "id": {
                    "type": "string"
                },
                "media": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.BlockMediaDetail"
                    }
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": true
                },
                "order_index": {
                    "type": "integer"
                },
                "status": {
                    "$ref": "#/definitions/models.BlockStatus"
                },
                "title": {
                    "type": "string"
                },
                "topic": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "models.BlockGuestDetail": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "notes": {
                    "type": "string"
                },
                "primary_contact": {
                    "$ref": "#/definitions/models.GuestContact"
                },
                "role": {
                    "type": "string"
                },
                "short_name": {
                    "type": "string"
                },
                "surname": {
                    "type": "string"
                }
            }
        },
        "models.BlockInfoData": {
            "type": "object",
            "properties": {
                "block": {
                    "$ref": "#/definitions/models.BlockDetail"
                },
                "event_info": {
                    "$ref": "#/definitions/models.EventSummary"
                }
            }
        },
        "models.BlockMediaDetail": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "file_name": {
                    "type": "string"
                },
                "file_size": {
                    "type": "integer"
                },
                "media_id": {
                    "type": "string"
                },
                "media_type": {
                    "type": "string"
                },
                "order_index": {
                    "type": "integer"
                },
                "s3_url": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "models.BlockMediaInput": {
            "type": "object",
            "required": [
                "media_id",
                "media_type"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "media_id": {
                    "type": "string"
                },
                "media_type": {
                    "type": "string"
                },
                "order_index": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "models.BlockOrder": {
            "type": "object",
            "required": [
                "block_id",
                "order_index"
            ],
            "properties": {
                "block_id": {
                    "type": "string"
                },
                "order_index": {
                    "type": "integer",
                    "minimum": 0
                }
            }
        },
        "models.BlockOrderSummary": {
            "type": "object",
            "properties": {
                "block_id": {
                    "type": "string"
                },
                "order_index": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "models.BlockStatus": {
            "type": "string",
            "enum": [
                "planned",
                "ready",
                "in_progress",
                "completed",
                "skipped"
            ],
            "x-enum-varnames": [
                "BlockStatusPlanned",
                "BlockStatusReady",
                "BlockStatusInProgress",
                "BlockStatusCompleted",
                "BlockStatusSkipped"
            ]
        },
        "models.BlockSummary": {
            "type": "object",
            "properties": {
                "actual_length": {
                    "type": "integer"
                },
                "block_type": {
                    "$ref": "#/definitions/models.BlockType"
                },
                "estimated_length": {
                    "type": "integer"
                },
                "guest_count": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "media_count": {
                    "type": "integer"
                },
                "order_index": {
                    "type": "integer"
                },
                "status": {
                    "$ref": "#/definitions/models.BlockStatus"
                },
                "title": {
                    "type": "string"
                },
                "topic": {
                    "type": "string"
                }
            }
        },
        "models.BlockType": {
            "type": "string",
            "enum": [
                "intro",
                "main",
                "interview",
                "qa",
                "break",
                "outro",
                "custom"
            ],
            "x-enum-varnames": [
                "BlockTypeIntro",
                "BlockTypeMain",
                "BlockTypeInterview",
                "BlockTypeQA",
                "BlockTypeBreak",
                "BlockTypeOutro",
                "BlockTypeCustom"
            ]
        },
        "models.ContactType": {
            "type": "string",
            "enum": [
                "email",
                "phone",
                "telegram",
                "discord",
                "twitter",
                "linkedin",
                "instagram",
                "website",
                "other"
            ],
            "x-enum-varnames": [
                "ContactTypeEmail",
                "ContactTypePhone",
                "ContactTypeTelegram",
                "ContactTypeDiscord",
                "ContactTypeTwitter",
                "ContactTypeLinkedIn",
                "ContactTypeInstagram",
                "ContactTypeWebsite",
                "ContactTypeOther"
            ]
        },
        "models.CreateGuestRequest": {
            "type": "object",
            "required": [
                "name",
                "surname"
            ],
            "properties": {
                "avatar": {
                    "type": "string"
                },
                "contacts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.GuestContact"
                    }
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": true
                },
                "name": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "notes": {
                    "type": "string"
                },
                "short_name": {
                    "type": "string"
                },
                "surname": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "models.CreateGuestResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/models.Guest"
                },
                "error": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "models.CreateRoleRequest": {
            "type": "object",
            "required": [
                "name",
                "permissions"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": true
                },
                "name": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 1
                },
                "permissions": {
                    "type": "array",
                    "minItems": 1,
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "models.CreateRoleResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/models.Role"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "models.CreateShowRequest": {
            "type": "object",
            "required": [
                "first_event_date",
                "length_minutes",
                "repeat_pattern",
                "show_name",
                "start_time",
                "youtube_key"
            ],
            "properties": {
                "additional_key": {
                    "type": "string"
                },
                "first_event_date": {
                    "type": "string"
                },
                "length_minutes": {
                    "type": "integer",
                    "maximum": 1440,
                    "minimum": 1
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": true
                },
                "repeat_pattern": {
                    "$ref": "#/definitions/models.RepeatPattern"
                },
                "scheduling_config": {
                    "$ref": "#/definitions/models.SchedulingConfig"
                },
                "show_name": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "start_time": {
                    "type": "string"
                },
                "youtube_key": {
                    "type": "string"
                },
                "zoom_meeting_id": {
                    "type": "string"
                },
                "zoom_meeting_url": {
                    "type": "string"
                },
                "zoom_passcode": {
                    "type": "string"
                }
            }
        },
        "models.CreateShowResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/models.Show"
                },
                "error": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "models.CreateUserRequest": {
            "type": "object",
            "required": [
                "email",
                "name",
                "password",
                "surname"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 1
                },
                "password": {
                    "type": "string",
                    "minLength": 8
                },
                "surname": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 1
                }
            }
        },
        "models.CreateUserResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/models.User"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "models.DateRange": {
            "type": "object",
            "properties": {
                "end": {
                    "type": "string"
                },
                "start": {
                    "type": "string"
                }
            }
        },
        "models.DeleteBlockData": {
            "type": "object",
            "properties": {
                "block_id": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "remaining_blocks_reordered": {
                    "type": "boolean"
                }
            }
        },
        "models.DeleteBlockRequest": {
            "type": "object",
            "required": [
                "block_id"
            ],
            "properties": {
                "block_id": {
                    "type": "string"
                },
                "reorder_remaining": {
                    "type": "boolean"
                }
            }
        },
        "models.DeleteBlockResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/models.DeleteBlockData"
                },
                "error": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "models.DeleteEventRequest": {
            "type": "object",
            "required": [
                "event_id"
            ],
            "properties": {
                "cancellation_reason": {
                    "type": "string"
                },
                "event_id": {
                    "type": "string"
                }
            }
        },
        "models.DeleteEventResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/models.EventDeleteData"
                },
                "error": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "models.DeleteGuestRequest": {
            "type": "object",
            "required": [
                "guest_id"
            ],
            "properties": {
                "guest_id": {
                    "type": "string"
                }
            }
        },
        "models.DeleteGuestResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/models.GuestDeleteData"
                },
                "error": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "models.DeleteMediaRequest": {
            "type": "object",
            "required": [
                "media_id"
            ],
            "properties": {
                "media_id": {
                    "type": "string"
                }
            }
        },
        "models.DeleteMediaResponse": {
            "type": "object",
            "properties": {
                "media_id": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "models.DeleteRoleRequest": {
            "type": "object",
            "required": [
                "role_id"
            ],
            "properties": {
                "role_id": {
                    "type": "string"
                }
            }
        },
        "models.DeleteRoleResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/models.RoleDeleteData"
                },
                "message": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "models.DeleteShowRequest": {
            "type": "object",
            "required": [
                "show_id"
            ],
            "properties": {
                "show_id": {
                    "type": "string"
                }
            }
        },
        "models.DeleteShowResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "models.DeleteUserRequest": {
            "type": "object",
            "properties": {
                "force": {
                    "type": "boolean"
                }
            }
        },
        "models.DeleteUserResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/models.UserDeleteData"
                },
                "message": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "models.DeviceInfo": {
            "type": "object",
            "properties": {
                "device_name": {
                    "type": "string"
                },
                "device_type": {
                    "type": "string"
                },
                "ip_address": {
                    "type": "string"
                },
                "user_agent": {
                    "type": "string"
                }
            }
        },
        "models.Event": {
            "type": "object",
            "properties": {
                "additional_key": {
                    "type": "string"
                },
                "created_at": {
                    "description": "Audit fields",
                    "type": "string"
                },
                "custom_fields": {
                    "type": "object",
                    "additionalProperties": true
                },
                "end_datetime": {
                    "type": "string"
                },
                "event_description": {
                    "type": "string"
                },
                "event_title": {
                    "description": "Event details (can override show defaults)",
                    "type": "string"
                },
                "generated_at": {
                    "description": "Generation tracking",
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_customized": {
                    "type": "boolean"
                },
                "last_synced_at": {
                    "type": "string"
                },
                "length_minutes": {
                    "type": "integer"
                },
                "show_id": {
                    "type": "string"
                },
                "show_version": {
                    "type": "integer"
                },
                "start_datetime": {
                    "description": "Timing (can override show defaults)",
                    "type": "string"
                },
                "status": {
                    "description": "Event metadata",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.EventStatus"
                        }
                    ]
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                },
                "youtube_key": {
                    "type": "string"
                },
                "zoom_meeting_id": {
                    "type": "string"
                },
                "zoom_meeting_url": {
                    "type": "string"
                },
                "zoom_passcode": {
                    "type": "string"
                }
            }
        },
        "models.EventBlocksData": {
            "type": "object",
            "properties": {
                "blocks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.BlockSummary"
                    }
                },
                "event_id": {
                    "type": "string"
                },
                "total_actual_time": {
                    "type": "integer"
                },
                "total_blocks": {
                    "type": "integer"
                },
                "total_estimated_time": {
                    "type": "integer"
                }
            }
        },
        "models.EventBlocksResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/models.EventBlocksData"
                },
                "error": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "models.EventDeleteData": {
            "type": "object",
            "properties": {
                "cancelled_at": {
                    "type": "string"
                },
                "event_id": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/models.EventStatus"
                }
            }
        },
        "models.EventFilters": {
            "type": "object",
            "properties": {
                "date_range": {
                    "$ref": "#/definitions/models.DateRange"
                },
                "is_customized": {
                    "type": "boolean"
                },
                "show_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "status": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.EventStatus"
                    }
                }
            }
        },
        "models.EventInfoData": {
            "type": "object",
            "properties": {
                "event": {
                    "$ref": "#/definitions/models.Event"
                },
                "show_details": {
                    "$ref": "#/definitions/models.ShowSummary"
                }
            }
        },
        "models.EventListData": {
            "type": "object",
            "properties": {
                "events": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.EventListItem"
                    }
                },
                "pagination": {
                    "$ref": "#/definitions/models.PaginationResponse"
                }
            }
        },
        "models.EventListItem": {
            "type": "object",
            "properties": {
                "end_datetime": {
                    "type": "string"
                },
                "event_title": {
                    "type": "string"
                },
                "has_zoom_meeting": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "is_customized": {
                    "type": "boolean"
                },
                "show_id": {
                    "type": "string"
                },
                "show_name": {
                    "type": "string"
                },
                "start_datetime": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/models.EventStatus"
                }
            }
        },
        "models.EventListRequest": {
            "type": "object",
            "properties": {
                "filters": {
                    "$ref": "#/definitions/models.EventFilters"
                },
                "pagination": {
                    "$ref": "#/definitions/models.PaginationOptions"
                },
                "sort": {
                    "$ref": "#/definitions/models.EventSortOptions"
                }
            }
        },
        "models.EventListResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/models.EventListData"
                },
                "error": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "models.EventSortOptions": {
            "type": "object",
            "properties": {
                "field": {
                    "type": "string"
                },
                "order": {
                    "type": "string"
                }
            }
        },
        "models.EventStatus": {
            "type": "string",
            "enum": [
                "scheduled",
                "live",
                "completed",
                "cancelled",
                "postponed"
            ],
            "x-enum-varnames": [
                "EventStatusScheduled",
                "EventStatusLive",
                "EventStatusCompleted",
                "EventStatusCancelled",
                "EventStatusPostponed"
            ]
        },
        "models.EventSummary": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "show_name": {
                    "type": "string"
                },
                "start_datetime": {
                    "type": "string"
                },
                "total_blocks": {
                    "type": "integer"
                },
                "total_estimated_time": {
                    "type": "integer"
                }
            }
        },
        "models.GetBlockInfoResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/models.BlockInfoData"
                },
                "error": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "models.GetEventInfoResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/models.EventInfoData"
                },
                "error": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "models.GetGuestInfoResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/models.GuestInfoData"
                },
                "error": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "models.GetLinkListRequest": {
            "type": "object",
            "required": [
                "content_id"
            ],
            "properties": {
                "content_id": {
                    "type": "string"
                }
            }
        },
        "models.GetLinkMediaRequest": {
            "type": "object",
            "required": [
                "media_id"
            ],
            "properties": {
                "media_id": {
                    "type": "string"
                }
            }
        },
        "models.GetLinkMediaURIRequest": {
            "type": "object",
            "required": [
                "media_id"
            ],
            "properties": {
                "expiry_minutes": {
                    "type": "integer"
                },
                "media_id": {
                    "type": "string"
                }
            }
        },
        "models.GetLinkMediaURIResponse": {
            "type": "object",
            "properties": {
                "expires_at": {
                    "type": "string"
                },
                "media_id": {
                    "type": "string"
                },
                "s3_url": {
                    "type": "string"
                }
            }
        },
        "models.GetRoleInfoResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/models.RoleWithUserCount"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "models.GetShowInfoResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/models.ShowInfoData"
                },
                "error": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "models.GetUserInfoResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/models.User"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "models.GoogleCallbackRequest": {
            "type": "object",
            "required": [
                "code",
                "state"
            ],
            "properties": {
                "code": {
                    "type": "string"
                },
                "device_info": {
                    "$ref": "#/definitions/models.DeviceInfo"
                },
                "state": {
                    "type": "string"
                }
            }
        },
        "models.GoogleCallbackResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/models.GoogleCallbackResponseData"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "models.GoogleCallbackResponseData": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "expires_in": {
                    "type": "integer"
                },
                "is_new_user": {
                    "type": "boolean"
                },
                "refresh_token": {
                    "type": "string"
                },
                "token_type": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/models.UserWithRoles"
                }
            }
        },
        "models.GoogleLinkRequest": {
            "type": "object",
            "required": [
                "id_token"
            ],
            "properties": {
                "id_token": {
                    "type": "string"
                }
            }
        },
        "models.GoogleLinkResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "models.GoogleLoginResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/models.GoogleLoginResponseData"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "models.GoogleLoginResponseData": {
            "type": "object",
            "properties": {
                "auth_url": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                }
            }
        },
        "models.Guest": {
            "type": "object",
            "properties": {
                "avatar": {
                    "type": "string"
                },
                "contacts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.GuestContact"
                    }
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": true
                },
                "name": {
                    "type": "string"
                },
                "notes": {
                    "type": "string"
                },
                "short_name": {
                    "type": "string"
                },
                "surname": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "models.GuestContact": {
            "type": "object",
            "properties": {
                "is_primary": {
                    "type": "boolean"
                },
                "label": {
                    "type": "string"
                },
                "type": {
                    "$ref": "#/definitions/models.ContactType"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "models.GuestDeleteData": {
            "type": "object",
            "properties": {
                "deleted_at": {
                    "type": "string"
                },
                "guest_id": {
                    "type": "string"
                }
            }
        },
        "models.GuestFilters": {
            "type": "object",
            "properties": {
                "created_date_range": {
                    "$ref": "#/definitions/models.DateRange"
                },
                "has_contact_type": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ContactType"
                    }
                },
                "search": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "models.GuestInfoData": {
            "type": "object",
            "properties": {
                "guest": {
                    "$ref": "#/definitions/models.Guest"
                },
                "stats": {
                    "$ref": "#/definitions/models.GuestStats"
                }
            }
        },
        "models.GuestListItem": {
            "type": "object",
            "properties": {
                "avatar": {
                    "type": "string"
                },
                "contact_count": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "notes_preview": {
                    "type": "string"
                },
                "primary_email": {
                    "type": "string"
                },
                "short_name": {
                    "type": "string"
                },
                "surname": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "models.GuestSortOptions": {
            "type": "object",
            "properties": {
                "field": {
                    "type": "string"
                },
                "order": {
                    "type": "string"
                }
            }
        },
        "models.GuestStats": {
            "type": "object",
            "properties": {
                "last_appearance": {
                    "type": "string"
                },
                "total_shows": {
                    "type": "integer"
                },
                "upcoming_shows": {
                    "type": "integer"
                }
            }
        },
        "models.GuestSuggestion": {
            "type": "object",
            "properties": {
                "avatar": {
                    "type": "string"
                },
                "display_name": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "match_score": {
                    "type": "number"
                },
                "name": {
                    "type": "string"
                },
                "primary_contact": {
                    "$ref": "#/definitions/models.GuestContact"
                },
                "short_name": {
                    "type": "string"
                },
                "surname": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "models.ListGuestsData": {
            "type": "object",
            "properties": {
                "guests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.GuestListItem"
                    }
                },
                "pagination": {
                    "$ref": "#/definitions/models.PaginationResponse"
                }
            }
        },
        "models.ListGuestsRequest": {
            "type": "object",
            "properties": {
                "filters": {
                    "$ref": "#/definitions/models.GuestFilters"
                },
                "pagination": {
                    "$ref": "#/definitions/models.PaginationOptions"
                },
                "sort": {
                    "$ref": "#/definitions/models.GuestSortOptions"
                }
            }
        },
        "models.ListGuestsResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/models.ListGuestsData"
                },
                "error": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "models.ListRolesData": {
            "type": "object",
            "properties": {
                "pagination": {
                    "$ref": "#/definitions/models.PaginationResponse"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.RoleListItem"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "models.ListRolesRequest": {
            "type": "object",
            "properties": {
                "filters": {
                    "$ref": "#/definitions/models.RoleFilters"
                },
                "pagination": {
                    "$ref": "#/definitions/models.PaginationOptions"
                },
                "sort": {
                    "$ref": "#/definitions/models.RoleSortOptions"
                }
            }
        },
        "models.ListRolesResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/models.ListRolesData"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "models.ListShowsData": {
            "type": "object",
            "properties": {
                "pagination": {
                    "$ref": "#/definitions/models.PaginationResponse"
                },
                "shows": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ShowListItem"
                    }
                }
            }
        },
        "models.ListShowsFilters": {
            "type": "object",
            "properties": {
                "repeat_pattern": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.RepeatPattern"
                    }
                },
                "search": {
                    "type": "string"
                },
                "status": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ShowStatus"
                    }
                }
            }
        },
        "models.ListShowsRequest": {
            "type": "object",
            "properties": {
                "filters": {
                    "$ref": "#/definitions/models.ListShowsFilters"
                },
                "pagination": {
                    "$ref": "#/definitions/models.PaginationOptions"
                },
                "sort": {
                    "$ref": "#/definitions/models.ListShowsSortOptions"
                }
            }
        },
        "models.ListShowsResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/models.ListShowsData"
                },
                "error": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "models.ListShowsSortOptions": {
            "type": "object",
            "properties": {
                "field": {
                    "type": "string"
                },
                "order": {
                    "type": "string"
                }
            }
        },
        "models.ListUsersData": {
            "type": "object",
            "properties": {
                "pagination": {
                    "$ref": "#/definitions/models.PaginationResponse"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.UserListItem"
                    }
                }
            }
        },
        "models.ListUsersRequest": {
            "type": "object",
            "properties": {
                "filters": {
                    "$ref": "#/definitions/models.UserFilters"
                },
                "pagination": {
                    "$ref": "#/definitions/models.PaginationOptions"
                },
                "sort": {
                    "$ref": "#/definitions/models.UserSortOptions"
                }
            }
        },
        "models.ListUsersResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/models.ListUsersData"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "models.LoginRequest": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "device_info": {
                    "$ref": "#/definitions/models.DeviceInfo"
                },
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "models.LoginResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/models.LoginResponseData"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "models.LoginResponseData": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "expires_in": {
                    "type": "integer"
                },
                "refresh_token": {
                    "type": "string"
                },
                "token_type": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/models.UserWithRoles"
                }
            }
        },
        "models.LogoutRequest": {
            "type": "object",
            "properties": {
                "logout_all_devices": {
                    "type": "boolean"
                },
                "refresh_token": {
                    "type": "string"
                }
            }
        },
        "models.LogoutResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "models.MediaListItem": {
            "type": "object",
            "properties": {
                "file_name": {
                    "type": "string"
                },
                "file_size": {
                    "type": "integer"
                },
                "file_type": {
                    "type": "string"
                },
                "media_id": {
                    "type": "string"
                },
                "upload_date": {
                    "type": "string"
                }
            }
        },
        "models.MediaListResponse": {
            "type": "object",
            "properties": {
                "content_id": {
                    "type": "string"
                },
                "link": {
                    "type": "string"
                },
                "media_files": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.MediaListItem"
                    }
                }
            }
        },
        "models.MonthDay": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "string"
                },
                "day_number": {
                    "type": "integer"
                },
                "events": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.MonthDayEvent"
                    }
                },
                "events_count": {
                    "type": "integer"
                },
                "is_current_month": {
                    "type": "boolean"
                }
            }
        },
        "models.MonthDayEvent": {
            "type": "object",
            "properties": {
                "duration_minutes": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "is_customized": {
                    "type": "boolean"
                },
                "show_name": {
                    "type": "string"
                },
                "start_time": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/models.EventStatus"
                }
            }
        },
        "models.MonthListData": {
            "type": "object",
            "properties": {
                "events_by_status": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "integer"
                    }
                },
                "month": {
                    "type": "integer"
                },
                "month_name": {
                    "type": "string"
                },
                "timezone": {
                    "type": "string"
                },
                "total_events": {
                    "type": "integer"
                },
                "weeks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.MonthWeek"
                    }
                },
                "year": {
                    "type": "integer"
                }
            }
        },
        "models.MonthListRequest": {
            "type": "object",
            "required": [
                "month",
                "year"
            ],
            "properties": {
                "filters": {
                    "$ref": "#/definitions/models.EventFilters"
                },
                "month": {
                    "type": "integer",
                    "maximum": 12,
                    "minimum": 1
                },
                "timezone": {
                    "type": "string"
                },
                "year": {
                    "type": "integer",
                    "maximum": 2030,
                    "minimum": 2020
                }
            }
        },
        "models.MonthListResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/models.MonthListData"
                },
                "error": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "models.MonthWeek": {
            "type": "object",
            "properties": {
                "days": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.MonthDay"
                    }
                },
                "week_number": {
                    "type": "integer"
                }
            }
        },
        "models.PaginationOptions": {
            "type": "object",
            "properties": {
                "limit": {
                    "type": "integer"
                },
                "page": {
                    "type": "integer"
                },
                "sort": {
                    "type": "string"
                }
            }
        },
        "models.PaginationResponse": {
            "type": "object",
            "properties": {
                "limit": {
                    "type": "integer"
                },
                "page": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                },
                "total_pages": {
                    "type": "integer"
                }
            }
        },
        "models.PostListItem": {
            "type": "object",
            "properties": {
                "added_at": {
                    "type": "string"
                },
                "content_id": {
                    "type": "string"
                },
                "link": {
                    "type": "string"
                },
                "media_count": {
                    "type": "integer"
                },
                "status": {
                    "$ref": "#/definitions/models.PostStatus"
                }
            }
        },
        "models.PostListResponse": {
            "type": "object",
            "properties": {
                "limit": {
                    "type": "integer"
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.PostListItem"
                    }
                },
                "page": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "models.PostStatus": {
            "type": "string",
            "enum": [
                "pending",
                "processing",
                "completed",
                "failed"
            ],
            "x-enum-varnames": [
                "PostStatusPending",
                "PostStatusProcessing",
                "PostStatusCompleted",
                "PostStatusFailed"
            ]
        },
        "models.RefreshTokenRequest": {
            "type": "object",
            "required": [
                "refresh_token"
            ],
            "properties": {
                "refresh_token": {
                    "type": "string"
                }
            }
        },
        "models.RefreshTokenResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/models.TokenPair"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "models.RemoveRoleFromUserResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "models.ReorderBlocksData": {
            "type": "object",
            "properties": {
                "blocks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.BlockOrderSummary"
                    }
                },
                "event_id": {
                    "type": "string"
                },
                "total_estimated_time": {
                    "type": "integer"
                }
            }
        },
        "models.ReorderBlocksRequest": {
            "type": "object",
            "required": [
                "block_orders",
                "event_id"
            ],
            "properties": {
                "block_orders": {
                    "type": "array",
                    "minItems": 1,
                    "items": {
                        "$ref": "#/definitions/models.BlockOrder"
                    }
                },
                "event_id": {
                    "type": "string"
                }
            }
        },
        "models.ReorderBlocksResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/models.ReorderBlocksData"
                },
                "error": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "models.RepeatPattern": {
            "type": "string",
            "enum": [
                "none",
                "daily",
                "weekly",
                "biweekly",
                "monthly",
                "custom"
            ],
            "x-enum-varnames": [
                "RepeatNone",
                "RepeatDaily",
                "RepeatWeekly",
                "RepeatBiweekly",
                "RepeatMonthly",
                "RepeatCustom"
            ]
        },
        "models.RevokeSessionResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "models.Role": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": true
                },
                "name": {
                    "type": "string"
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "status": {
                    "$ref": "#/definitions/models.RoleStatus"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.RoleDeleteData": {
            "type": "object",
            "properties": {
                "deleted_at": {
                    "type": "string"
                },
                "role_id": {
                    "type": "string"
                }
            }
        },
        "models.RoleFilters": {
            "type": "object",
            "properties": {
                "permissions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "search": {
                    "type": "string"
                },
                "status": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.RoleStatus"
                    }
                }
            }
        },
        "models.RoleInfo": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "models.RoleListItem": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "status": {
                    "$ref": "#/definitions/models.RoleStatus"
                },
                "user_count": {
                    "type": "integer"
                }
            }
        },
        "models.RoleSortOptions": {
            "type": "object",
            "required": [
                "field",
                "order"
            ],
            "properties": {
                "field": {
                    "type": "string",
                    "enum": [
                        "name",
                        "created_at",
                        "updated_at"
                    ]
                },
                "order": {
                    "type": "string",
                    "enum": [
                        "asc",
                        "desc"
                    ]
                }
            }
        },
        "models.RoleStatus": {
            "type": "string",
            "enum": [
                "active",
                "inactive"
            ],
            "x-enum-varnames": [
                "RoleStatusActive",
                "RoleStatusInactive"
            ]
        },
        "models.RoleWithUserCount": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": true
                },
                "name": {
                    "type": "string"
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "status": {
                    "$ref": "#/definitions/models.RoleStatus"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_count": {
                    "type": "integer"
                }
            }
        },
        "models.SchedulingConfig": {
            "type": "object",
            "properties": {
                "monthly_day": {
                    "description": "For monthly patterns - calendar day-based",
                    "type": "integer"
                },
                "monthly_day_fallback": {
                    "description": "\"last_day\", \"skip\"",
                    "type": "string"
                },
                "monthly_week_number": {
                    "description": "1, 2, 3, 4, or -1 for last",
                    "type": "integer"
                },
                "monthly_weekday": {
                    "description": "For monthly patterns - weekday-based",
                    "type": "integer"
                },
                "weekdays": {
                    "description": "For weekly and biweekly patterns",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "models.SessionInfo": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "device_name": {
                    "type": "string"
                },
                "device_type": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "ip_address": {
                    "type": "string"
                },
                "is_current": {
                    "type": "boolean"
                },
                "last_activity": {
                    "type": "string"
                },
                "location": {
                    "type": "string"
                }
            }
        },
        "models.SessionListData": {
            "type": "object",
            "properties": {
                "sessions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.SessionInfo"
                    }
                }
            }
        },
        "models.SessionListResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/models.SessionListData"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "models.Show": {
            "type": "object",
            "properties": {
                "additional_key": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "first_event_date": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "length_minutes": {
                    "type": "integer"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": true
                },
                "repeat_pattern": {
                    "$ref": "#/definitions/models.RepeatPattern"
                },
                "scheduling_config": {
                    "$ref": "#/definitions/models.SchedulingConfig"
                },
                "show_name": {
                    "type": "string"
                },
                "start_time": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/models.ShowStatus"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                },
                "version": {
                    "type": "integer"
                },
                "youtube_key": {
                    "type": "string"
                },
                "zoom_meeting_id": {
                    "type": "string"
                },
                "zoom_meeting_url": {
                    "type": "string"
                },
                "zoom_passcode": {
                    "type": "string"
                }
            }
        },
        "models.ShowEvent": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "string"
                },
                "end_datetime": {
                    "type": "string"
                },
                "start_datetime": {
                    "type": "string"
                }
            }
        },
        "models.ShowInfoData": {
            "type": "object",
            "properties": {
                "show": {
                    "$ref": "#/definitions/models.Show"
                },
                "upcoming_events": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ShowEvent"
                    }
                }
            }
        },
        "models.ShowListItem": {
            "type": "object",
            "properties": {
                "first_event_date": {
                    "type": "string"
                },
                "has_zoom_meeting": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "length_minutes": {
                    "type": "integer"
                },
                "next_occurrence": {
                    "type": "string"
                },
                "next_occurrences": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "repeat_pattern": {
                    "$ref": "#/definitions/models.RepeatPattern"
                },
                "scheduling_config": {
                    "$ref": "#/definitions/models.SchedulingConfig"
                },
                "show_name": {
                    "type": "string"
                },
                "start_time": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/models.ShowStatus"
                }
            }
        },
        "models.ShowStatus": {
            "type": "string",
            "enum": [
                "active",
                "paused",
                "completed",
                "cancelled"
            ],
            "x-enum-varnames": [
                "ShowStatusActive",
                "ShowStatusPaused",
                "ShowStatusCompleted",
                "ShowStatusCancelled"
            ]
        },
        "models.ShowSummary": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "repeat_pattern": {
                    "$ref": "#/definitions/models.RepeatPattern"
                },
                "show_name": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/models.ShowStatus"
                }
            }
        },
        "models.TokenPair": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "expires_in": {
                    "type": "integer"
                },
                "refresh_token": {
                    "type": "string"
                },
                "token_type": {
                    "type": "string"
                }
            }
        },
        "models.TokenVerificationData": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "expires_at": {
                    "type": "string"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "user_id": {
                    "type": "string"
                },
                "valid": {
                    "type": "boolean"
                }
            }
        },
        "models.UpdateBlockRequest": {
            "type": "object",
            "required": [
                "block_id"
            ],
            "properties": {
                "actual_length": {
                    "type": "integer"
                },
                "block_id": {
                    "type": "string"
                },
                "block_type": {
                    "$ref": "#/definitions/models.BlockType"
                },
                "description": {
                    "type": "string"
                },
                "estimated_length": {
                    "type": "integer"
                },
                "guest_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "media": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.BlockMediaInput"
                    }
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": true
                },
                "status": {
                    "$ref": "#/definitions/models.BlockStatus"
                },
                "title": {
                    "type": "string"
                },
                "topic": {
                    "type": "string"
                }
            }
        },
        "models.UpdateBlockResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/models.BlockDetail"
                },
                "error": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "models.UpdateEventRequest": {
            "type": "object",
            "required": [
                "event_id"
            ],
            "properties": {
                "additional_key": {
                    "type": "string"
                },
                "custom_fields": {
                    "type": "object",
                    "additionalProperties": true
                },
                "event_description": {
                    "type": "string"
                },
                "event_id": {
                    "type": "string"
                },
                "event_title": {
                    "type": "string"
                },
                "length_minutes": {
                    "type": "integer"
                },
                "start_datetime": {
                    "type": "string"
                },
                "youtube_key": {
                    "type": "string"
                },
                "zoom_meeting_id": {
                    "type": "string"
                },
                "zoom_meeting_url": {
                    "type": "string"
                },
                "zoom_passcode": {
                    "type": "string"
                }
            }
        },
        "models.UpdateEventResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/models.Event"
                },
                "error": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "models.UpdateGuestRequest": {
            "type": "object",
            "required": [
                "guest_id"
            ],
            "properties": {
                "avatar": {
                    "type": "string"
                },
                "contacts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.GuestContact"
                    }
                },
                "guest_id": {
                    "type": "string"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": true
                },
                "name": {
                    "type": "string"
                },
                "notes": {
                    "type": "string"
                },
                "short_name": {
                    "type": "string"
                },
                "surname": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "models.UpdateGuestResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/models.Guest"
                },
                "error": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "models.UpdateMediaRequest": {
            "type": "object",
            "required": [
                "media_id"
            ],
            "properties": {
                "file_name": {
                    "type": "string"
                },
                "media_id": {
                    "type": "string"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": true
                },
                "original_file_name": {
                    "type": "string"
                }
            }
        },
        "models.UpdateMediaResponse": {
            "type": "object",
            "properties": {
                "media_id": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "models.UpdateRoleRequest": {
            "type": "object",
            "required": [
                "role_id"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": true
                },
                "name": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 1
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "role_id": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/models.RoleStatus"
                }
            }
        },
        "models.UpdateRoleResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/models.Role"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "models.UpdateUserRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 1
                },
                "surname": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 1
                }
            }
        },
        "models.UpdateUserResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/models.User"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "models.User": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "last_login_at": {
                    "type": "string"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": true
                },
                "name": {
                    "type": "string"
                },
                "oidc_provider": {
                    "type": "string"
                },
                "oidc_subject": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/models.UserStatus"
                },
                "surname": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.UserDeleteData": {
            "type": "object",
            "properties": {
                "deleted_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "models.UserFilters": {
            "type": "object",
            "properties": {
                "oidc_provider": {
                    "type": "string"
                },
                "role_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "search": {
                    "type": "string"
                },
                "status": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.UserStatus"
                    }
                }
            }
        },
        "models.UserListItem": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "last_login_at": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/models.UserStatus"
                },
                "surname": {
                    "type": "string"
                }
            }
        },
        "models.UserSortOptions": {
            "type": "object",
            "required": [
                "field",
                "order"
            ],
            "properties": {
                "field": {
                    "type": "string",
                    "enum": [
                        "name",
                        "email",
                        "created_at",
                        "updated_at",
                        "last_login_at"
                    ]
                },
                "order": {
                    "type": "string",
                    "enum": [
                        "asc",
                        "desc"
                    ]
                }
            }
        },
        "models.UserStatus": {
            "type": "string",
            "enum": [
                "active",
                "inactive",
                "pending",
                "suspended"
            ],
            "x-enum-varnames": [
                "UserStatusActive",
                "UserStatusInactive",
                "UserStatusPending",
                "UserStatusSuspended"
            ]
        },
        "models.UserWithRoles": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "last_login_at": {
                    "type": "string"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": true
                },
                "name": {
                    "type": "string"
                },
                "oidc_provider": {
                    "type": "string"
                },
                "oidc_subject": {
                    "type": "string"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.RoleInfo"
                    }
                },
                "status": {
                    "$ref": "#/definitions/models.UserStatus"
                },
                "surname": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.VerifyTokenResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/models.TokenVerificationData"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "models.WeekDay": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "string"
                },
                "day_name": {
                    "type": "string"
                },
                "events": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.WeekDayEvent"
                    }
                }
            }
        },
        "models.WeekDayEvent": {
            "type": "object",
            "properties": {
                "end_time": {
                    "type": "string"
                },
                "event_title": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_customized": {
                    "type": "boolean"
                },
                "show_name": {
                    "type": "string"
                },
                "start_time": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/models.EventStatus"
                }
            }
        },
        "models.WeekListData": {
            "type": "object",
            "properties": {
                "days": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.WeekDay"
                    }
                },
                "timezone": {
                    "type": "string"
                },
                "total_events": {
                    "type": "integer"
                },
                "week_end": {
                    "type": "string"
                },
                "week_start": {
                    "type": "string"
                }
            }
        },
        "models.WeekListRequest": {
            "type": "object",
            "required": [
                "week_start"
            ],
            "properties": {
                "filters": {
                    "$ref": "#/definitions/models.EventFilters"
                },
                "timezone": {
                    "type": "string"
                },
                "week_start": {
                    "type": "string"
                }
            }
        },
        "models.WeekListResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/models.WeekListData"
                },
                "error": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "description": "API key authentication",
            "type": "apiKey",
            "name": "X-API-Key",
            "in": "header"
        },
        "BearerAuth": {
            "description": "JWT Bearer token authentication. Format: \"Bearer {token}\"",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "St. Planer - YouTube Stream Planner API",
	Description:      "A Go-based microservice for planning and scheduling YouTube live streams. Helps content creators organize their streaming schedule and manage content.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
